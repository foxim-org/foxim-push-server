# This is a basic workflow to help you get started with Actions

name: FOXIM-PUSH-SERVER

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ legacy-history ]
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ## Sets environment variable
  SSH_IP: ${{ secrets.SSH_IP }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  PORT: ${{ secrets.PORT }}
  MQTT_MONGO_URL: ${{ secrets.MQTT_MONGO_URL }}
  PERSISTENCE_TTL: ${{ secrets.PERSISTENCE_TTL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  MQTT_SECRET_CLIENT_ID: ${{ secrets.MQTT_SECRET_CLIENT_ID }}
  BROKER_ID: ${{ secrets.BROKER_ID }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  LIVEKIT_KEY: ${{ secrets.LIVEKIT_KEY }}
  LIVEKIT_SECRET: ${{ secrets.LIVEKIT_SECRET }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: "Prepare SSH key and known hosts"
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: ./deploy.sh
